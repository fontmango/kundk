<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Kids Coloring Shapes</title>
  <style>
    body {
      margin: 0;
      padding: 0;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      height: 100vh;
      background: #fafafa;
      font-family: sans-serif;
    }

    canvas {
      border: 2px solid #444;
      border-radius: 10px;
      background: white;
      cursor: crosshair;
    }

    .toolbar {
      margin-bottom: 10px;
      display: flex;
      gap: 10px;
      flex-wrap: wrap;
      justify-content: center;
    }

    .color-swatch {
      width: 30px;
      height: 30px;
      border-radius: 50%;
      border: 2px solid #333;
      cursor: pointer;
    }

    button {
      padding: 6px 12px;
      font-size: 14px;
      cursor: pointer;
      border-radius: 6px;
      border: 1px solid #333;
      background: #eee;
    }

    button:hover {
      background: #ddd;
    }
  </style>
</head>
<body>
  <div class="toolbar">
    <div class="color-swatch" style="background:red" data-color="red"></div>
    <div class="color-swatch" style="background:blue" data-color="blue"></div>
    <div class="color-swatch" style="background:green" data-color="green"></div>
    <div class="color-swatch" style="background:yellow" data-color="yellow"></div>
    <div class="color-swatch" style="background:orange" data-color="orange"></div>
    <div class="color-swatch" style="background:black" data-color="black"></div>
    <button id="circleBtn">Circle</button>
    <button id="squareBtn">Square</button>
    <button id="clearBtn">Clear</button>
  </div>
  
  <canvas id="drawingCanvas" width="800" height="500"></canvas>

  <script>
    const canvas = document.getElementById('drawingCanvas');
    const ctx = canvas.getContext('2d');
    const clearBtn = document.getElementById('clearBtn');
    const circleBtn = document.getElementById('circleBtn');
    const squareBtn = document.getElementById('squareBtn');
    const swatches = document.querySelectorAll('.color-swatch');

    let drawing = false;
    let brushColor = 'black';
    let brushSize = 20;
    let lastX = 0, lastY = 0;
    let shape = "circle"; // default

    function drawOutline() {
      ctx.save();
      ctx.lineWidth = 5;
      ctx.strokeStyle = "black";
      ctx.beginPath();
      if (shape === "circle") {
        ctx.arc(canvas.width / 2, canvas.height / 2, 150, 0, Math.PI * 2);
      } else if (shape === "square") {
        ctx.rect(canvas.width / 2 - 150, canvas.height / 2 - 150, 300, 300);
      }
      ctx.stroke();
      ctx.restore();
    }

    function applyClip() {
      ctx.beginPath();
      if (shape === "circle") {
        ctx.arc(canvas.width / 2, canvas.height / 2, 150, 0, Math.PI * 2);
      } else if (shape === "square") {
        ctx.rect(canvas.width / 2 - 150, canvas.height / 2 - 150, 300, 300);
      }
      ctx.clip(); // restrict brush strokes inside
    }

    function startDrawing(e) {
      drawing = true;
      [lastX, lastY] = [e.offsetX, e.offsetY];
    }

    function draw(e) {
      if (!drawing) return;
      ctx.save();
      applyClip();

      ctx.strokeStyle = brushColor;
      ctx.lineWidth = brushSize;
      ctx.lineCap = 'round';
      ctx.lineJoin = 'round';

      ctx.beginPath();
      ctx.moveTo(lastX, lastY);
      ctx.lineTo(e.offsetX, e.offsetY);
      ctx.stroke();

      ctx.restore(); // reset clipping
      drawOutline(); // redraw outline above colors

      [lastX, lastY] = [e.offsetX, e.offsetY];
    }

    function stopDrawing() {
      drawing = false;
    }

    canvas.addEventListener('mousedown', startDrawing);
    canvas.addEventListener('mousemove', draw);
    canvas.addEventListener('mouseup', stopDrawing);
    canvas.addEventListener('mouseleave', stopDrawing);

    // Change color
    swatches.forEach(swatch => {
      swatch.addEventListener('click', () => {
        brushColor = swatch.dataset.color;
      });
    });

    // Clear canvas
    clearBtn.addEventListener('click', () => {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      drawOutline();
    });

    // Switch shape
    circleBtn.addEventListener('click', () => {
      shape = "circle";
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      drawOutline();
    });

    squareBtn.addEventListener('click', () => {
      shape = "square";
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      drawOutline();
    });

    // Init
    drawOutline();
  </script>
</body>
</html>
