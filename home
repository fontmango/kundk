<!DOCTYPE html>
<html lang="de">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>kiwiundknoedel - Geschenke mit Kinderzeichnungen</title>
    <!-- Use "Permanent Marker" for logo and "Caveat" for the headline -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Permanent+Marker&family=Caveat:wght@400..700&family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <!-- Load Tailwind CSS -->
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        :root {
            --primary-purple: #7f00ff;
            --primary-pink: #f06292;
        }

        body {
            font-family: 'Inter', sans-serif;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
        }

        .logo-font {
            font-family: 'Permanent Marker', cursive;
        }
        
        .headline-font {
            font-family: 'Caveat', cursive;
        }

        /* Benutzerdefinierte Stile f√ºr den Bild-Slider */
        .slider-container {
            position: relative;
            width: 100%;
            height: auto;
            overflow: hidden;
            user-select: none;
            cursor: ew-resize; /* Zeiger, der auf das Verschieben hinweist */
            border-radius: 1.5rem; /* Abgerundete Ecken */
        }

        .slider-image {
            width: 100%;
            height: auto;
            display: block;
            pointer-events: none; /* Ignoriert Maus-Events auf den Bildern */
        }

        .slider-image.after {
            position: absolute;
            top: 0;
            left: 0;
            clip-path: inset(0 0 0 50%);
        }

        .slider-handle {
            position: absolute;
            top: 0;
            left: 50%;
            width: 4px;
            height: 100%;
            background-color: white;
            transform: translateX(-50%);
            z-index: 10;
        }

        .label {
            position: absolute;
            top: 20px;
            left: 20px;
            background-color: rgba(0, 0, 0, 0.5);
            color: white;
            padding: 8px 12px;
            border-radius: 9999px;
            font-weight: 500;
        }

        .after-label {
            left: auto;
            right: 20px;
        }

        .drawing-canvas-container {
            display: none;
        }
        
        .drawing-canvas {
            background-color: #fff;
            cursor: crosshair;
            border-radius: 12px;
            border: 1px solid #e5e7eb;
        }
        
        /* Farbverlauf f√ºr den Button "Jetzt ansehen" */
        .gradient-button {
            background: linear-gradient(90deg, var(--primary-purple) 0%, var(--primary-pink) 100%);
        }
    </style>
</head>

<body class="bg-gray-100 text-gray-800">

    <!-- Haupt-Container -->
    <div class="min-h-screen flex flex-col">

        <!-- Kopfzeile -->
        <header class="p-6 flex items-center justify-between">
            <div class="flex items-center space-x-2">
                <span class="text-2xl font-bold text-gray-900 logo-font">kiwiundknoedel</span>
            </div>
            <div class="flex items-center space-x-4">
                <a href="#" class="px-4 py-2 text-sm font-semibold rounded-full text-blue-600 hover:text-blue-700 transition">Gallerie</a>
                <a href="#" class="px-4 py-2 text-sm font-semibold rounded-full bg-blue-600 text-white hover:bg-blue-700 transition">Shop</a>
            </div>
        </header>

        <!-- Hauptinhaltsbereich -->
        <main class="flex-grow flex items-center justify-center p-6 md:p-12">
            <div class="flex flex-col lg:flex-row items-center justify-center w-full max-w-7xl space-y-12 lg:space-y-0 lg:space-x-12">

                <!-- Linke Spalte (Text & Buttons) -->
                <div class="flex-1 text-center lg:text-left space-y-6">
                    <h1 class="text-4xl sm:text-5xl md:text-6xl font-extrabold leading-tight tracking-tight text-gray-900 headline-font">
                        Emotionen verschenken war noch nie so einfach
                    </h1>
                    <p class="text-base sm:text-lg text-gray-600 max-w-xl mx-auto lg:mx-0">
                        M√ºtter schicken mir die Zeichnungen ihrer Kinder, ich bearbeite sie und bedrucke T-Shirts damit. So entstehen einzigartige Geschenke f√ºr Geburtstage, Vatertag, Weihnachten und viele andere Anl√§sse. Einfach und mit tollen Ergebnissen!
                    </p>
                    <div class="flex flex-col sm:flex-row items-center justify-center lg:justify-start space-y-4 sm:space-y-0 sm:space-x-4 mt-8">
                        <!-- Upload-Button -->
                        <button id="uploadBtn" class="w-full sm:w-auto px-8 py-3 font-semibold text-white rounded-full gradient-button hover:shadow-lg transition">
                            Eigenes Bild hochladen
                        </button>
                        <!-- Zeichen-Button -->
                        <button id="drawBtn" class="w-full sm:w-auto px-8 py-3 font-semibold text-gray-800 bg-gray-200 rounded-full hover:bg-gray-300 transition">
                            Selbst zeichnen
                        </button>
                    </div>
                    <div class="mt-8 pt-4 space-y-2 text-sm text-gray-600 font-medium">
                        <p>üéÅ Emotionen verschenken war noch nie so einfach</p>
                        <p>‚ú® √ºber 1.000 Kinderzeichnungen verarbeitet</p>
                    </div>
                </div>

                <!-- Rechte Spalte (Bild-Slider) -->
                <div class="flex-1 w-full max-w-xl lg:max-w-none">
                    <div class="bg-white rounded-3xl shadow-2xl p-4 md:p-6 lg:p-8">
                        <div id="sliderContainer" class="slider-container relative overflow-hidden">
                            <!-- Zeichenfl√§che f√ºr das Zeichnen -->
                            <div id="drawingContainer" class="drawing-canvas-container absolute top-0 left-0 w-full h-full">
                                <canvas id="drawingCanvas" class="drawing-canvas w-full h-full"></canvas>
                                <div class="absolute bottom-4 left-1/2 -translate-x-1/2 z-20 flex space-x-2">
                                    <button id="clearCanvasBtn" class="px-4 py-2 text-sm font-medium bg-red-500 text-white rounded-full hover:bg-red-600 transition">L√∂schen</button>
                                    <button id="saveCanvasBtn" class="px-4 py-2 text-sm font-medium bg-blue-500 text-white rounded-full hover:bg-blue-600 transition">Zeichnung speichern</button>
                                </div>
                            </div>
                            <!-- Vorher/Nachher-Bilder -->
                            <div id="imageSlider" class="relative">
                                <img src="https://placehold.co/800x600/ffffff/000000?text=Original" alt="Vorher-Bild" class="slider-image before rounded-3xl">
                                <img src="https://placehold.co/800x600/7f00ff/ffffff?text=Magisch" alt="Nachher-Bild" class="slider-image after rounded-3xl">
                                <span class="label">Original</span>
                                <span class="label after-label">Magisch</span>
                                <div id="sliderHandle" class="slider-handle"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </main>
        
        <!-- Wie es funktioniert Sektion -->
        <section class="py-16 md:py-24 bg-white text-gray-800">
            <div class="max-w-7xl mx-auto px-6 lg:px-8 text-center space-y-12">
                <h2 class="text-4xl sm:text-5xl font-extrabold leading-tight tracking-tight text-gray-900 headline-font">
                    So funktioniert's
                </h2>
                <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
                    <!-- Schritt 1 -->
                    <div class="flex flex-col items-center p-8 bg-gray-50 rounded-3xl shadow-md space-y-4">
                        <div class="w-16 h-16 bg-blue-500 text-white rounded-full flex items-center justify-center text-2xl font-bold logo-font">1</div>
                        <h3 class="text-2xl font-bold headline-font">Bild hochladen</h3>
                        <p class="text-gray-600">Lade die Kinderzeichnung hoch oder nutze die Zeichenfunktion, um deine Idee direkt auf der Seite festzuhalten.</p>
                    </div>
                    <!-- Schritt 2 -->
                    <div class="flex flex-col items-center p-8 bg-gray-50 rounded-3xl shadow-md space-y-4">
                        <div class="w-16 h-16 bg-blue-500 text-white rounded-full flex items-center justify-center text-2xl font-bold logo-font">2</div>
                        <h3 class="text-2xl font-bold headline-font">Wir zaubern ein Beispiel</h3>
                        <p class="text-gray-600">Innerhalb von 24 Stunden melden wir uns bei dir mit einem digitalen Beispiel, wie das fertige Produkt aussehen k√∂nnte.</p>
                    </div>
                    <!-- Schritt 3 -->
                    <div class="flex flex-col items-center p-8 bg-gray-50 rounded-3xl shadow-md space-y-4">
                        <div class="w-16 h-16 bg-blue-500 text-white rounded-full flex items-center justify-center text-2xl font-bold logo-font">3</div>
                        <h3 class="text-2xl font-bold headline-font">Bestellung abschicken</h3>
                        <p class="text-gray-600">Wenn dir das Ergebnis gef√§llt, schickst du deine Bestellung ab und das einzigartige Geschenk macht sich auf den Weg zu dir!</p>
                    </div>
                </div>
            </div>
        </section>

        <!-- FAQ Sektion -->
        <section class="py-16 md:py-24 bg-gray-50 text-gray-800">
            <div class="max-w-7xl mx-auto px-6 lg:px-8 space-y-12">
                <h2 class="text-4xl sm:text-5xl font-extrabold leading-tight tracking-tight text-center text-gray-900 headline-font">
                    H√§ufig gestellte Fragen (FAQ)
                </h2>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
                    <!-- FAQ Frage 1 -->
                    <div class="p-6 bg-white rounded-3xl shadow-md space-y-2">
                        <h4 class="text-lg font-bold text-gray-900">Wie lange dauert es, bis ich mein Beispiel sehe?</h4>
                        <p class="text-gray-600">Nachdem du die Zeichnung hochgeladen hast, erh√§ltst du in der Regel innerhalb von 24 Stunden einen Entwurf von uns.</p>
                    </div>
                    <!-- FAQ Frage 2 -->
                    <div class="p-6 bg-white rounded-3xl shadow-md space-y-2">
                        <h4 class="text-lg font-bold text-gray-900">Welche Art von Zeichnungen kann ich hochladen?</h4>
                        <p class="text-gray-600">Am besten eignen sich einfache Strichzeichnungen auf wei√üem Papier. Aber wir k√∂nnen auch mit farbigen Bildern arbeiten!</p>
                    </div>
                    <!-- FAQ Frage 3 -->
                    <div class="p-6 bg-white rounded-3xl shadow-md space-y-2">
                        <h4 class="text-lg font-bold text-gray-900">Welche Produkte kann ich bedrucken lassen?</h4>
                        <p class="text-gray-600">Im Moment bieten wir T-Shirts an, aber wir planen, unser Sortiment bald um Hoodies und Tassen zu erweitern.</p>
                    </div>
                    <!-- FAQ Frage 4 -->
                    <div class="p-6 bg-white rounded-3xl shadow-md space-y-2">
                        <h4 class="text-lg font-bold text-gray-900">Kann ich die Farben anpassen?</h4>
                        <p class="text-gray-600">Ja, absolut! Wir passen die Farben an, um sicherzustellen, dass das Design perfekt auf dem gew√§hlten Produkt aussieht. Alle Details kl√§ren wir vor dem Druck.</p>
                    </div>
                    <!-- FAQ Frage 5 -->
                    <div class="p-6 bg-white rounded-3xl shadow-md space-y-2">
                        <h4 class="text-lg font-bold text-gray-900">Gibt es eine Mindestbestellmenge?</h4>
                        <p class="text-gray-600">Nein, es gibt keine Mindestbestellmenge. Du kannst schon ab einem St√ºck bestellen.</p>
                    </div>
                    <!-- FAQ Frage 6 -->
                    <div class="p-6 bg-white rounded-3xl shadow-md space-y-2">
                        <h4 class="text-lg font-bold text-gray-900">Wie sind die Versandkosten?</h4>
                        <p class="text-gray-600">Die Versandkosten sind pauschal und werden im Warenkorb angezeigt, bevor du die Bestellung abschickst.</p>
                    </div>
                    <!-- FAQ Frage 7 -->
                    <div class="p-6 bg-white rounded-3xl shadow-md space-y-2">
                        <h4 class="text-lg font-bold text-gray-900">Kann ich die Bestellung stornieren?</h4>
                        <p class="text-gray-600">Eine Stornierung ist m√∂glich, solange das Produkt noch nicht gedruckt wurde. Bitte kontaktiere uns so schnell wie m√∂glich.</p>
                    </div>
                    <!-- FAQ Frage 8 -->
                    <div class="p-6 bg-white rounded-3xl shadow-md space-y-2">
                        <h4 class="text-lg font-bold text-gray-900">Wie pflege ich die bedruckten Textilien?</h4>
                        <p class="text-gray-600">F√ºr eine lange Haltbarkeit empfehlen wir, die Textilien auf links zu waschen und sie nicht in den Trockner zu geben.</p>
                    </div>
                    <!-- FAQ Frage 9 -->
                    <div class="p-6 bg-white rounded-3xl shadow-md space-y-2">
                        <h4 class="text-lg font-bold text-gray-900">Kann ich mein eigenes T-Shirt bedrucken lassen?</h4>
                        <p class="text-gray-600">Aktuell bedrucken wir nur T-Shirts aus unserem eigenen Sortiment, um eine optimale Druckqualit√§t zu garantieren.</p>
                    </div>
                    <!-- FAQ Frage 10 -->
                    <div class="p-6 bg-white rounded-3xl shadow-md space-y-2">
                        <h4 class="text-lg font-bold text-gray-900">Wie kontaktiere ich euch?</h4>
                        <p class="text-gray-600">Du kannst uns jederzeit √ºber unser Kontaktformular oder per E-Mail erreichen. Wir antworten dir so schnell wie m√∂glich.</p>
                    </div>
                </div>
            </div>
        </section>

    </div>

    <!-- Verstecktes Dateieingabefeld zum Hochladen -->
    <input type="file" id="fileInput" class="hidden" accept="image/*">

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const fileInput = document.getElementById('fileInput');
            const uploadBtn = document.getElementById('uploadBtn');
            const drawBtn = document.getElementById('drawBtn');
            const clearCanvasBtn = document.getElementById('clearCanvasBtn');
            const saveCanvasBtn = document.getElementById('saveCanvasBtn');

            const sliderContainer = document.getElementById('sliderContainer');
            const imageSlider = document.getElementById('imageSlider');
            const sliderHandle = document.getElementById('sliderHandle');
            const beforeImage = document.querySelector('.slider-image.before');
            const afterImage = document.querySelector('.slider-image.after');
            const drawingContainer = document.getElementById('drawingContainer');
            const drawingCanvas = document.getElementById('drawingCanvas');

            const ctx = drawingCanvas.getContext('2d');
            let isDrawing = false;
            let lastX = 0;
            let lastY = 0;

            // Funktion zur Gr√∂√üenanpassung des Canvas an die Bildabmessungen
            const resizeCanvas = () => {
                drawingCanvas.width = beforeImage.offsetWidth;
                drawingCanvas.height = beforeImage.offsetHeight;
                ctx.lineWidth = 4;
                ctx.lineCap = 'round';
                ctx.strokeStyle = '#000000';
            };

            // Anf√§ngliche Gr√∂√üenanpassung beim Laden der Seite
            window.addEventListener('load', resizeCanvas);
            // Gr√∂√üenanpassung des Canvas, wenn sich die Fenstergr√∂√üe √§ndert
            window.addEventListener('resize', resizeCanvas);

            // Funktion zum Hochladen von Bildern
            uploadBtn.addEventListener('click', () => {
                fileInput.click();
            });

            fileInput.addEventListener('change', (e) => {
                const file = e.target.files[0];
                if (file) {
                    const reader = new FileReader();
                    reader.onload = (event) => {
                        const img = new Image();
                        img.onload = () => {
                            // Aktualisiere das Vorher-Bild mit dem hochgeladenen Bild
                            beforeImage.src = event.target.result;
                            // Stelle sicher, dass der Slider sichtbar ist
                            imageSlider.style.display = 'block';
                            drawingContainer.style.display = 'none';
                            resizeCanvas(); // Passe die Gr√∂√üe des Canvas an die neuen Bildabmessungen an
                        };
                        img.src = event.target.result;
                    };
                    reader.readAsDataURL(file);
                }
            });

            // Funktion zum Umschalten zwischen Bild-Slider und Zeichenfl√§che
            drawBtn.addEventListener('click', () => {
                const isCanvasVisible = drawingContainer.style.display === 'block';
                if (!isCanvasVisible) {
                    imageSlider.style.display = 'none';
                    drawingContainer.style.display = 'block';
                    resizeCanvas();
                } else {
                    imageSlider.style.display = 'block';
                    drawingContainer.style.display = 'none';
                }
            });

            // Zeichenfl√§che l√∂schen
            clearCanvasBtn.addEventListener('click', () => {
                ctx.clearRect(0, 0, drawingCanvas.width, drawingCanvas.height);
            });
            
            // Zeichnung als Bild speichern
            saveCanvasBtn.addEventListener('click', () => {
                const dataURL = drawingCanvas.toDataURL('image/png');
                const link = document.createElement('a');
                link.href = dataURL;
                link.download = 'meine-zeichnung.png';
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
            });

            // Zeichen-Logik
            function draw(e) {
                if (!isDrawing) return;
                ctx.beginPath();
                ctx.moveTo(lastX, lastY);
                ctx.lineTo(e.offsetX, e.offsetY);
                ctx.stroke();
                [lastX, lastY] = [e.offsetX, e.offsetY];
            }

            drawingCanvas.addEventListener('mousedown', (e) => {
                isDrawing = true;
                [lastX, lastY] = [e.offsetX, e.offsetY];
            });
            drawingCanvas.addEventListener('mouseup', () => isDrawing = false);
            drawingCanvas.addEventListener('mouseout', () => isDrawing = false);
            drawingCanvas.addEventListener('mousemove', draw);
            
            // Touch-Event-Listener f√ºr das Zeichnen
            drawingCanvas.addEventListener('touchstart', (e) => {
                e.preventDefault();
                const touch = e.touches[0];
                const rect = drawingCanvas.getBoundingClientRect();
                isDrawing = true;
                [lastX, lastY] = [touch.clientX - rect.left, touch.clientY - rect.top];
            });
            drawingCanvas.addEventListener('touchend', () => isDrawing = false);
            drawingCanvas.addEventListener('touchcancel', () => isDrawing = false);
            drawingCanvas.addEventListener('touchmove', (e) => {
                e.preventDefault();
                const touch = e.touches[0];
                const rect = drawingCanvas.getBoundingClientRect();
                if (!isDrawing) return;
                ctx.beginPath();
                ctx.moveTo(lastX, lastY);
                ctx.lineTo(touch.clientX - rect.left, touch.clientY - rect.top);
                ctx.stroke();
                [lastX, lastY] = [touch.clientX - rect.left, touch.clientY - rect.top];
            });

            // Vorher/Nachher-Bild-Slider-Logik
            const handleMouseOver = (clientX) => {
                const rect = sliderContainer.getBoundingClientRect();
                let x = clientX - rect.left;

                // Beschr√§nke den Wert auf die Bildgrenzen
                if (x < 0) x = 0;
                if (x > rect.width) x = rect.width;

                const percentage = (x / rect.width) * 100;
                const clipPathValue = `inset(0 ${100 - percentage}% 0 0)`;
                
                afterImage.style.clipPath = clipPathValue;
                sliderHandle.style.left = `${percentage}%`;
            };

            const resetSlider = () => {
                const rect = sliderContainer.getBoundingClientRect();
                const defaultPercentage = 50;
                const clipPathValue = `inset(0 ${100 - defaultPercentage}% 0 0)`;
                
                afterImage.style.clipPath = clipPathValue;
                sliderHandle.style.left = `${defaultPercentage}%`;
            };

            // Maus-Events f√ºr den Slider
            sliderContainer.addEventListener('mousemove', (e) => {
                handleMouseOver(e.clientX);
            });

            sliderContainer.addEventListener('mouseleave', () => {
                resetSlider();
            });

            // Touch-Events f√ºr den Slider
            sliderContainer.addEventListener('touchmove', (e) => {
                e.preventDefault();
                handleMouseOver(e.touches[0].clientX);
            });

            // Anf√§ngliche Position des Sliders
            resetSlider();
        });
    </script>
</body>
</html>
